@*<input type="checkbox" @onchange=@(()=>{ DisplayEmail = !DisplayEmail;})/><label>Display email</label>*@
@inject IJSRuntime jsRuntime

<input type="checkbox" @bind="DisplayEmail" /><label>Display email</label>

@if (Contacts is null)
{
    @NullContancts
}
else if (Contacts.Count == 0)
{
    @EmptyContent
}else
@foreach (Contact contact in Contacts)
    {
        <ContactComp CurrentContact="contact" DisplayEmail=@DisplayEmail DeleteCurrentContact="DeleteContact"></ContactComp>
        //reuseable oomponent
    }

@code{
    [Parameter]
    public RenderFragment NullContancts { get; set; }
    [Parameter]
    public RenderFragment EmptyContent { get; set; }
    [Parameter]
    public List<Contact> Contacts { get; set; }

    private bool DisplayEmail = true;

    private async Task DeleteContact(Contact contact)
    {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm",$"Do you want to delete {contact.Name} from contact list?");

        if (confirm) Contacts.Remove(contact);

    }

}